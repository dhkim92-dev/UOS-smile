
CREATE TABLE BRANCH
(
	BRANCH_NO            NUMBER(7) NOT NULL ,
	BRANCH_NAME          VARCHAR2(120) NOT NULL ,
	BRANCH_ADDRESS       VARCHAR2(300) NOT NULL ,
	BRANCH_PHONE_NO      VARCHAR2(14) NOT NULL ,
	COMMISSION           NUMBER(2) NOT NULL
);

CREATE UNIQUE INDEX XPKBRANCH ON BRANCH
(BRANCH_NO   ASC);

ALTER TABLE BRANCH
	ADD CONSTRAINT  XPKBRANCH PRIMARY KEY (BRANCH_NO);

CREATE TABLE EMPLOYEE
(
	EMPLOYEE_NO          NUMBER(12) NOT NULL ,
  POSITION_CODE        NUMBER(4) NOT NULL ,
	BRANCH_NO            NUMBER(7) NOT NULL ,
  EMPLOYEE_NAME        VARCHAR2(40) NOT NULL ,
  EMPLOYEE_PHONE_NO    VARCHAR2(14) NOT NULL ,
	EMPLOYEE_ACCOUNT     VARCHAR2(40) NOT NULL ,
  EMPLOYEE_ACCOUNT_BANK VARCHAR2(40) NOT NULL, 
  WORK_START_DATE      CHAR(10) NOT NULL ,
  WORK_END_DATE        CHAR(10) NULL ,
	CURRENT_WORK_STATE   CHAR(1) NOT NULL 
);

CREATE UNIQUE INDEX XPKEMPLOYEE ON EMPLOYEE
(EMPLOYEE_NO   ASC);

ALTER TABLE EMPLOYEE
	ADD CONSTRAINT  XPKEMPLOYEE PRIMARY KEY (EMPLOYEE_NO);

CREATE TABLE WORKING_RECORD
(
	EMPLOYEE_NO          NUMBER(12) NOT NULL ,
	WORK_DATE            CHAR(10) NOT NULL ,
	WORK_START_TIME      CHAR(5) NOT NULL ,
	WORK_END_TIME        CHAR(5) NOT NULL ,
  DAILY_WAGE           NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKWORKING_RECORD ON WORKING_RECORD
(EMPLOYEE_NO   ASC,WORK_DATE   ASC,WORK_START_TIME   ASC,WORK_END_TIME   ASC);

ALTER TABLE WORKING_RECORD
	ADD CONSTRAINT  XPKWORKING_RECORD PRIMARY KEY (EMPLOYEE_NO,WORK_DATE,WORK_START_TIME,WORK_END_TIME);

CREATE TABLE SALARY
(
	EMPLOYEE_NO          NUMBER(12) NOT NULL ,
	MONTH_NO             NUMBER(6) NOT NULL ,
	SALARY               NUMBER(8) NOT NULL ,
	SALARY_PAY_STATE     CHAR(1) NOT NULL ,
	SALARY_PAY_DATE      CHAR(10) NULL ,
	REMITTANCE_NO        NUMBER(16) NULL 
);

CREATE UNIQUE INDEX XPKSALARY ON SALARY
(EMPLOYEE_NO   ASC,MONTH_NO   ASC);

ALTER TABLE SALARY
	ADD CONSTRAINT  XPKSALARY PRIMARY KEY (EMPLOYEE_NO,MONTH_NO);

CREATE TABLE LOGIN_INFORMATION
(
  EMPLOYEE_NO          NUMBER(12) NOT NULL ,
	LOGIN_PASSWORD       VARCHAR2(80) NOT NULL ,
	BRANCH_NO            NUMBER(7) NOT NULL 
);

CREATE UNIQUE INDEX XPKLOGIN_INFORMATION ON LOGIN_INFORMATION
(EMPLOYEE_NO   ASC);

ALTER TABLE LOGIN_INFORMATION
	ADD CONSTRAINT  XPKLOGIN_INFORMATION PRIMARY KEY (EMPLOYEE_NO);

CREATE TABLE GAIN_AND_LOSS
(
  BRANCH_NO            NUMBER(7) NOT NULL,
	MONTH_NO                NUMBER(6) NOT NULL ,
	TOTAL_SALES_AMOUNT   NUMBER(10) NOT NULL ,
	WAGE_PAYMENT         NUMBER(9) NOT NULL ,
	INCOME               NUMBER(10) NOT NULL ,
	COMMISSION           NUMBER(10) NOT NULL
);

CREATE UNIQUE INDEX XPKGAIN_AND_LOSS ON GAIN_AND_LOSS
(MONTH   ASC,BRANCH_NO   ASC);

ALTER TABLE GAIN_AND_LOSS
	ADD CONSTRAINT  XPKGAIN_AND_LOSS PRIMARY KEY (MONTH,BRANCH_NO);

CREATE TABLE CUSTOMER
(
	CUSTOMER_NO          NUMBER(9) NOT NULL ,
	CUSTOMER_NAME        VARCHAR2(40) NOT NULL ,
	CUSTOMER_AGE         NUMBER(3) NOT NULL ,
	CUSTOMER_GENDER      VARCHAR2(30) NOT NULL ,
  CUSTOMER_PHONE_NO    VARCHAR2(14) NULL ,
	CUSTOMER_MILEAGE     NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKCUSTOMER ON CUSTOMER
(CUSTOMER_NO   ASC);

ALTER TABLE CUSTOMER
	ADD CONSTRAINT  XPKCUSTOMER PRIMARY KEY (CUSTOMER_NO);

CREATE TABLE HOURLY_WAGE
(
	SEPARATION           VARCHAR2(10) NOT NULL ,
	HOURLY_WAGE          NUMBER(5) NOT NULL 
);

CREATE UNIQUE INDEX XPKHOURLY_WAGE ON HOURLY_WAGE
(SEPARTION   ASC);

ALTER TABLE HOURLY_WAGE
	ADD CONSTRAINT  XPKHOURLY_WAGE PRIMARY KEY (SEPARTION);

CREATE TABLE INVENTORY
(
  BRANCH_NO            NUMBER(7) NOT NULL ,
	ITEM_NO              NUMBER(16) NOT NULL ,
	ITEM_CODE            NUMBER(8) NOT NULL ,
  STORE_DATE           CHAR(10) NOT NULL ,
	SHELF_LIFE           CHAR(13) NOT NULL ,
	STORED_AMOUNT        NUMBER(4) NOT NULL 
);

CREATE UNIQUE INDEX XPKINVENTORY ON INVENTORY
(ITEM_NO   ASC,BRANCH_NO   ASC);

ALTER TABLE INVENTORY
	ADD CONSTRAINT  XPKINVENTORY PRIMARY KEY (ITEM_NO,BRANCH_NO);

CREATE TABLE ORDERS
(
	ORDER_NO             NUMBER(16) NOT NULL ,
  BRANCH_NO            NUMBER(7) NOT NULL , 
	ORDER_DATE           CHAR(10) NOT NULL ,
	ORDER_STATE          VARCHAR2(60) NOT NULL
);

CREATE UNIQUE INDEX XPKORDERS ON ORDERS
(ORDER_NO   ASC);

ALTER TABLE ORDERS
	ADD CONSTRAINT  XPKORDERS PRIMARY KEY (ORDER_NO);

CREATE TABLE POSITION
(
	POSITION_CODE        NUMBER(4) NOT NULL ,
	POSITION             VARCHAR2(50) NOT NULL 
);

CREATE UNIQUE INDEX XPKPOSITION ON POSITION
(POSITION_CODE   ASC);

ALTER TABLE POSITION
	ADD CONSTRAINT  XPKPOSITION PRIMARY KEY (POSITION_CODE);

CREATE TABLE RETURN_LIST
(
	RETURN_NO            NUMBER(16) NOT NULL ,
	BRANCH_NO            NUMBER(7) NOT NULL ,
  ITEM_NO              NUMBER(16) NOT NULL ,  
	RETURN_AMOUNT        NUMBER(4) NOT NULL ,
	RETURN_DATE          CHAR(10) NOT NULL ,
  RETURN_REASON        VARCHAR2(200) NULL ,
	RETURN_STATE         VARCHAR2(120) NULL ,
	INVENTORY_APPLY_STATE CHAR(1) NOT NULL
);

CREATE UNIQUE INDEX XPKRETURN_LIST ON RETURN_LIST
(RETURN_NO   ASC,BRANCH_NO   ASC,ITEM_NO   ASC);

ALTER TABLE RETURN_LIST
	ADD CONSTRAINT  XPKRETURN_LIST PRIMARY KEY (RETURN_NO,BRANCH_NO,ITEM_NO);

CREATE TABLE ITEM
(
	ITEM_CODE            NUMBER(8) NOT NULL ,
	ITEM_NAME            VARCHAR2(120) NOT NULL ,	
  ITEM_CATEGORY        VARCHAR2(60) NULL , 
	ITEM_PRICE           NUMBER(7) NOT NULL ,
	DISCOUNT_RATE        NUMBER(3) NOT NULL ,
	EVENT_BENEFIT        VARCHAR2(500) NULL 
);

CREATE UNIQUE INDEX XPKITEM ON ITEM
(ITEM_CODE   ASC);

ALTER TABLE ITEM
	ADD CONSTRAINT  XPKITEM PRIMARY KEY (ITEM_CODE);

CREATE TABLE ORDER_LIST
(
	ORDER_NO             NUMBER(16) NOT NULL ,
	ITEM_CODE            NUMBER(8) NOT NULL ,
  ORDER_AMOUNT         NUMBER(4) NOT NULL
);

CREATE UNIQUE INDEX XPKORDER_LIST ON ORDER_LIST
(ORDER_NO   ASC,ITEM_CODE   ASC);

ALTER TABLE ORDER_LIST
	ADD CONSTRAINT  XPKORDER_LIST PRIMARY KEY (ORDER_NO,ITEM_CODE);

CREATE TABLE SALE
(
	SALE_NO              NUMBER(16) NOT NULL ,	
  BRANCH_NO            NUMBER(7) NOT NULL ,
  CUSTOMER_NO          NUMBER(9) NULL ,
	SALES_AMOUNT         NUMBER(8) NOT NULL ,
	SALE_TIME            NUMBER(12) NOT NULL ,
	SALE_VALIDATION      CHAR(1) NOT NULL 
);

CREATE UNIQUE INDEX XPKSALE ON SALE
(SALE_NO   ASC);

ALTER TABLE SALE
	ADD CONSTRAINT  XPKSALE PRIMARY KEY (SALE_NO);

CREATE TABLE SALE_LIST
(
	SALE_NO              NUMBER(16) NOT NULL ,
	ITEM_NO              NUMBER(16) NOT NULL ,
  BRANCH_NO            NUMBER(7) NOT NULL ,
	ITEM_UNIT_PRICE      NUMBER(7) NOT NULL ,
	SALE_QUANTITY        NUMBER(3) NOT NULL ,
	SALE_SUM             NUMBER(8) NOT NULL
);

CREATE UNIQUE INDEX XPKSALE_LIST ON SALE_LIST
(SALE_NO   ASC,ITEM_NO   ASC);

ALTER TABLE SALE_LIST
	ADD CONSTRAINT  XPKSALE_LIST PRIMARY KEY (SALE_NO,ITEM_NO);

ALTER TABLE EMPLOYEE
	ADD (CONSTRAINT R_30 FOREIGN KEY (BRANCH_NO) REFERENCES BRANCH (BRANCH_NO));

ALTER TABLE EMPLOYEE
	ADD (CONSTRAINT R_45 FOREIGN KEY (POSITION_CODE) REFERENCES POSITION (POSITION_CODE));

ALTER TABLE WORKING_RECORD
	ADD (CONSTRAINT R_10 FOREIGN KEY (EMPLOYEE_NO) REFERENCES EMPLOYEE (EMPLOYEE_NO));

ALTER TABLE SALARY
	ADD (CONSTRAINT R_9 FOREIGN KEY (EMPLOYEE_NO) REFERENCES EMPLOYEE (EMPLOYEE_NO));

ALTER TABLE LOGIN_INFORMATION
	ADD (CONSTRAINT R_39 FOREIGN KEY (EMPLOYEE_NO) REFERENCES EMPLOYEE (EMPLOYEE_NO) ON DELETE CASCADE);

ALTER TABLE LOGIN_INFORMATION
	ADD (CONSTRAINT R_40 FOREIGN KEY (BRANCH_NO) REFERENCES BRANCH (BRANCH_NO) ON DELETE CASCADE);

ALTER TABLE GAIN_AND_LOSS
	ADD (CONSTRAINT R_44 FOREIGN KEY (BRANCH_NO) REFERENCES BRANCH (BRANCH_NO));

ALTER TABLE INVENTORY
	ADD (CONSTRAINT R_28 FOREIGN KEY (ITEM_CODE) REFERENCES ITEM (ITEM_CODE));

ALTER TABLE INVENTORY
	ADD (CONSTRAINT R_29 FOREIGN KEY (BRANCH_NO) REFERENCES BRANCH (BRANCH_NO));

ALTER TABLE ORDERS
	ADD (CONSTRAINT R_33 FOREIGN KEY (BRANCH_NO) REFERENCES BRANCH (BRANCH_NO));

ALTER TABLE RETURN_LIST
	ADD (CONSTRAINT R_43 FOREIGN KEY (ITEM_NO, BRANCH_NO) REFERENCES INVENTORY (ITEM_NO, BRANCH_NO));

ALTER TABLE ORDER_LIST
	ADD (CONSTRAINT R_13 FOREIGN KEY (ORDER_NO) REFERENCES ORDERS (ORDER_NO));

ALTER TABLE ORDER_LIST
	ADD (CONSTRAINT R_15 FOREIGN KEY (ITEM_CODE) REFERENCES ITEM (ITEM_CODE));

ALTER TABLE SALE
	ADD (CONSTRAINT R_26 FOREIGN KEY (CUSTOMER_NO) REFERENCES CUSTOMER (CUSTOMER_NO) ON DELETE SET NULL);

ALTER TABLE SALE
	ADD (CONSTRAINT R_32 FOREIGN KEY (BRANCH_NO) REFERENCES BRANCH (BRANCH_NO));

ALTER TABLE SALE_LIST
	ADD (CONSTRAINT R_4 FOREIGN KEY (SALE_NO) REFERENCES SALE (SALE_NO));

ALTER TABLE SALE_LIST
	ADD (CONSTRAINT R_5 FOREIGN KEY (ITEM_NO, BRANCH_NO) REFERENCES INVENTORY (ITEM_NO, BRANCH_NO));
